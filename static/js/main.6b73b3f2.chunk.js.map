{"version":3,"sources":["Work/Data.js","Work/JavascriptPage.js","Work/JavaPage.js","Work/PythonPage.js","Work/CsharpPage.js","Work/MainPage.js","App.js","reportWebVitals.js","index.js"],"names":["getAverage","arr","sum","i","length","pythonPay","pythonPop","pythonPayA","pythonPopA","javaPay","javaPop","javaPayA","javaPopA","csharpPay","csharpPop","csharpPayA","csharpPopA","javascriptPay","javascriptPop","javascriptPayA","javascriptPopA","JavascriptPage","anim1","useRef","useState","pageState","setPageState","Ldata","labels","datasets","label","data","borderColor","backgroundColor","pointBackgroundColor","pointBorderColor","Bdata","useEffect","gsap","fromTo","current","background","className","alt","src","onClick","style","ref","options","title","display","text","scales","yAxes","ticks","min","max","stepSize","JavaPage","PythonPage","CsharpPage","MainPage","errorOpacity","setErrorOpacity","tempfirstlan","setTempFirstLan","tempsecondlan","setTempSecondLan","firstlanguage","setFirstlanguage","secondlanguage","setSecondlanguage","setPythonPay","setPythonPopularity","setJavaPay","setJavaPopularity","setCsharpPay","setCsharpPopularity","setJavascriptPay","setJavascriptPopularity","Ddata","Math","round","Cdata","onSubmit","e","preventDefault","onChange","console","log","target","value","defaultValue","id","opacity","color","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6b73b3f2.chunk.js","sourcesContent":["const getAverage = arr => {\r\n    var sum = 0; \r\n    for (let i = 0; i < arr.length; i++) {\r\n        sum += arr[i]\r\n    }\r\n    return sum / arr.length - 1; \r\n}\r\n\r\n\r\n//python \r\n\r\nexport var pythonPay = [84000, 86000, 85000, 87000, 90000, 91000]\r\nexport var pythonPop = [10800, 11800, 12500, 13100, 13200, 14100]\r\n\r\nexport var pythonPayA = getAverage(pythonPay); \r\nexport var pythonPopA = getAverage(pythonPop); \r\n\r\n//java \r\n\r\nexport var javaPay = [100000, 101000, 112000, 121000, 120000, 107000]\r\nexport var javaPop = [29200, 28100, 26700, 29700, 28600, 27100]\r\n\r\nexport var javaPayA = getAverage(javaPay); \r\nexport var javaPopA = getAverage(javaPop); \r\n\r\n//c#\r\n\r\nexport var csharpPay = [101000, 99000, 95100, 97000, 89700, 95200]\r\nexport var csharpPop = [9300, 10300, 11100, 11000, 10400, 9800]\r\n\r\nexport var csharpPayA = getAverage(csharpPay); \r\nexport var csharpPopA = getAverage(csharpPop); \r\n\r\n//javascript\r\n\r\nexport var javascriptPay = [68000, 67800, 70000, 85000, 82300, 87000]\r\nexport var javascriptPop = [20200, 20500, 20700, 21200, 21600, 22000]\r\n\r\nexport var javascriptPayA = getAverage(javascriptPay); \r\nexport var javascriptPopA = getAverage(javascriptPop); \r\n","import React, { useState, useRef, useEffect } from 'react'; \r\nimport CsharpPage from './CsharpPage';\r\nimport PythonPage from './PythonPage';\r\nimport JavaPage from './JavaPage';\r\nimport MainPage from './MainPage';\r\nimport '../Language.scss'; \r\nimport { Line, Bar } from 'react-chartjs-2'\r\nimport { javascriptPay, javascriptPop } from \"./Data.js\"\r\nimport gsap from 'gsap'; \r\n\r\nfunction JavascriptPage() {\r\n\r\n    //useRef\r\n    const anim1 = useRef(null); \r\n\r\n    //useState \r\n    const [pageState, setPageState] = useState(\"javascript\"); \r\n\r\n    //functions \r\n    const handlePageStateCompare = () => {\r\n        setPageState(\"compare\"); \r\n    }\r\n\r\n    const handlePageStateC = () => {\r\n        setPageState(\"c#\"); \r\n    }\r\n\r\n    const handlePageStatePython = () => {\r\n        setPageState(\"python\"); \r\n    }\r\n\r\n    const handlePageStateJava = () => {\r\n        setPageState(\"java\"); \r\n    }\r\n\r\n\r\n    const Ldata = {\r\n        labels: [\"2012\", \"2014\", \"2016\", \"2018\", \"2020\"], \r\n        datasets: [\r\n            {\r\n                label: \"Javascript\",  \r\n                data: javascriptPay, \r\n                borderColor: \"rgb(144, 19, 247)\", \r\n                backgroundColor: \"rgba(144, 19, 247, 0.4)\", \r\n                pointBackgroundColor: \"rgb(144, 19, 247)\", \r\n                pointBorderColor: \"rgb(144, 19, 247)\", \r\n            }, \r\n        ]\r\n    }\r\n    const Loptions = {\r\n        title: {\r\n            display: true, \r\n            text: 'Pay', \r\n        }, \r\n        scales: {\r\n            yAxes: [\r\n                {\r\n                    ticks: { min: 60000, max: 130000, stepSize: 30000}\r\n                }\r\n            ]\r\n        }\r\n    }\r\n\r\n\r\n    const Bdata = {\r\n        labels: [\"2012\", \"2014\", \"2016\", \"2018\", \"2020\"], \r\n        datasets: [\r\n            {\r\n                label: \"Javascript\", \r\n                data: javascriptPop,  \r\n                borderColor: \"rgb(5, 255, 255)\", \r\n                backgroundColor: \"rgba(5, 255, 255)\", \r\n                pointBackgroundColor: \"rgb(5, 255, 255)\", \r\n                pointBorderColor: \"rgb(5, 255, 255)\", \r\n            }\r\n        ]\r\n    }\r\n    const Boptions = {\r\n        title: {\r\n            display: true, \r\n            text: 'Popularity', \r\n        }, \r\n        scales: {\r\n            yAxes: [\r\n                {\r\n                    ticks: { min: 8000, max: 35000, stepSize: 15000}\r\n                }\r\n            ]\r\n        }\r\n    }\r\n\r\n    //useEffect \r\n    useEffect(() => {\r\n        gsap.fromTo(anim1.current, { background: \"rgb(240,240,240)\" }, { background: \"linear-gradient(270deg, rgba(255,255,255,1) 0%, rgba(255,255,255,0) 100%\" })\r\n    }, [])\r\n\r\n    if (pageState === \"compare\") {\r\n        return <MainPage/>\r\n    }\r\n\r\n    else if (pageState === \"c#\") {\r\n        return <CsharpPage/>\r\n    }\r\n\r\n    else if (pageState === \"python\") {\r\n        return <PythonPage/>\r\n    }\r\n\r\n    else if (pageState === \"java\") {\r\n        return <JavaPage/>\r\n    }\r\n\r\n    return (\r\n        <div className=\"lan-page-container\">\r\n\r\n            <div className=\"left-side-container\">\r\n                <div className=\"img-container\">\r\n                    <img alt=\"\" src=\"https://dewey.tailorbrands.com/production/brand_version_mockup_image/445/4923940445_398d42e5-d903-4e8e-ba08-df943c0765d8.png?cb=1616534087\"/>\r\n                </div>\r\n                <div className=\"left-side-box\">\r\n                    <div className=\"compare-button\" onClick={handlePageStateCompare} style={{backgroundColor: \"rgb(240, 240, 240)\"}}>Compare</div>\r\n                    <div className=\"other-button\" onClick={handlePageStatePython} style={{backgroundColor: \"rgb(240, 240, 240)\"}}>Python</div>\r\n                    <div className=\"other-button\" onClick={handlePageStateC} style={{backgroundColor: \"rgb(240, 240, 240)\"}}>C#</div>\r\n                    <div className=\"other-button\" onClick={handlePageStateJava} style={{backgroundColor: \"rgb(240, 240, 240)\"}}>Java</div>\r\n                    <div className=\"other-button\" style={{backgroundColor: \"white\"}} ref={anim1}>Javascript</div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"right-side-container\">\r\n                \r\n                <h1>Javascript</h1>\r\n\r\n                <div className=\"top-p-thing\">\r\n                    JavaScript is a lightweight, interpreted, object-oriented \r\n                    language with first-class functions, and is best known as \r\n                    the scripting language for Web pages, but it's used in \r\n                    many non-browser environments as well. It is a prototype-based, \r\n                    multi-paradigm scripting language that is dynamic, and supports \r\n                    object-oriented, imperative, and functional programming styles.\r\n                </div>\r\n\r\n                <div className=\"graph-div\">\r\n                    <p>\r\n                        The demand for javascript developers has increased over \r\n                        the last decade. Mainly the demand comes from web \r\n                        development itself.\r\n                    </p>\r\n                    <div className=\"line-stuff\">\r\n                        <Line data={Ldata} options={Loptions}/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"graph-div\">\r\n                    <p>\r\n                        The popularity and demand for javascript developers varies \r\n                        from React JS, Vue Js, and Angular, atleast that's the demand. \r\n                        This has remained the same throughout the last decade.\r\n                    </p>\r\n                    <div className=\"line-stuff\">\r\n                        <Bar data={Bdata} options={Boptions}/>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JavascriptPage\r\n","import React, { useState, useEffect, useRef } from 'react'; \r\nimport CsharpPage from './CsharpPage';\r\nimport PythonPage from './PythonPage';\r\nimport JavascriptPage from './JavascriptPage';\r\nimport MainPage from './MainPage';\r\nimport '../Language.scss'; \r\nimport { Line, Bar } from 'react-chartjs-2'\r\nimport { javaPay, javaPop } from \"./Data.js\"\r\nimport gsap from 'gsap'; \r\n\r\nfunction JavaPage() {\r\n\r\n    //useRef \r\n    const anim1 = useRef(null); \r\n\r\n    //useState \r\n    const [pageState, setPageState] = useState(\"java\"); \r\n\r\n    //functions \r\n    const handlePageStateCompare = () => {\r\n        setPageState(\"compare\"); \r\n    }\r\n\r\n    const handlePageStateC = () => {\r\n        setPageState(\"c#\"); \r\n    }\r\n\r\n    const handlePageStatePython = () => {\r\n        setPageState(\"python\"); \r\n    }\r\n\r\n    const handlePageStateJavascript = () => {\r\n        setPageState(\"javascript\"); \r\n    }\r\n\r\n\r\n    const Ldata = {\r\n        labels: [\"2012\", \"2014\", \"2016\", \"2018\", \"2020\"], \r\n        datasets: [\r\n            {\r\n                label: \"Java\",  \r\n                data: javaPay, \r\n                borderColor: \"rgb(144, 19, 247)\", \r\n                backgroundColor: \"rgba(144, 19, 247, 0.4)\", \r\n                pointBackgroundColor: \"rgb(144, 19, 247)\", \r\n                pointBorderColor: \"rgb(144, 19, 247)\", \r\n            }, \r\n        ]\r\n    }\r\n    const Loptions = {\r\n        title: {\r\n            display: true, \r\n            text: 'Pay', \r\n        }, \r\n        scales: {\r\n            yAxes: [\r\n                {\r\n                    ticks: { min: 60000, max: 130000, stepSize: 30000}\r\n                }\r\n            ]\r\n        }\r\n    }\r\n\r\n\r\n    const Bdata = {\r\n        labels: [\"2012\", \"2014\", \"2016\", \"2018\", \"2020\"], \r\n        datasets: [\r\n            {\r\n                label: \"Java\", \r\n                data: javaPop,  \r\n                borderColor: \"rgb(5, 255, 255)\", \r\n                backgroundColor: \"rgba(5, 255, 255)\", \r\n                pointBackgroundColor: \"rgb(5, 255, 255)\", \r\n                pointBorderColor: \"rgb(5, 255, 255)\", \r\n            }\r\n        ]\r\n    }\r\n    const Boptions = {\r\n        title: {\r\n            display: true, \r\n            text: 'Popularity', \r\n        }, \r\n        scales: {\r\n            yAxes: [\r\n                {\r\n                    ticks: { min: 8000, max: 35000, stepSize: 15000}\r\n                }\r\n            ]\r\n        }\r\n    }\r\n\r\n    //useEffect \r\n    useEffect(() => {\r\n        gsap.fromTo(anim1.current, { background: \"rgb(240,240,240)\" }, { background: \"linear-gradient(270deg, rgba(255,255,255,1) 0%, rgba(255,255,255,0) 100%\" })\r\n    }, [])\r\n\r\n    if (pageState === \"compare\") {\r\n        return <MainPage/>\r\n    }\r\n\r\n    else if (pageState === \"c#\") {\r\n        return <CsharpPage/>\r\n    }\r\n\r\n    else if (pageState === \"python\") {\r\n        return <PythonPage/>\r\n    }\r\n\r\n    else if (pageState === \"javascript\") {\r\n        return <JavascriptPage/>\r\n    }\r\n\r\n    return (\r\n        <div className=\"lan-page-container\">\r\n\r\n            <div className=\"left-side-container\">\r\n                <div className=\"img-container\">\r\n                    <img alt=\"\" src=\"https://dewey.tailorbrands.com/production/brand_version_mockup_image/445/4923940445_398d42e5-d903-4e8e-ba08-df943c0765d8.png?cb=1616534087\"/>\r\n                </div>\r\n                <div className=\"left-side-box\">\r\n                    <div className=\"compare-button\" onClick={handlePageStateCompare} style={{backgroundColor: \"rgb(240, 240, 240)\"}}>Compare</div>\r\n                    <div className=\"other-button\" onClick={handlePageStatePython} style={{backgroundColor: \"rgb(240, 240, 240)\"}}>Python</div>\r\n                    <div className=\"other-button\" onClick={handlePageStateC} style={{backgroundColor: \"rgb(240, 240, 240)\"}}>C#</div>\r\n                    <div className=\"other-button\" style={{backgroundColor: \"white\"}} ref={anim1}>Java</div>\r\n                    <div className=\"other-button\" onClick={handlePageStateJavascript} style={{backgroundColor: \"rgb(240, 240, 240)\"}}>Javascript</div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"right-side-container\">\r\n                \r\n                <h1>Java</h1>\r\n\r\n                <div className=\"top-p-thing\">\r\n                    Java is a high-level programming language developed \r\n                    by Sun Microsystems. It was originally designed for \r\n                    developing programs for set-top boxes and handheld \r\n                    devices, but later became a popular choice for creating\r\n                    web applications. The Java syntax is similar to C++, \r\n                    but is strictly an object-oriented programming language.\r\n                </div>\r\n\r\n                <div className=\"graph-div\">\r\n                    <p>\r\n                        Over the last decade, the pay for Java Developers \r\n                        peaked midway through the decade. Ever since 2018, \r\n                        the average pay has fallen into 2020.\r\n                    </p>\r\n                    <div className=\"line-stuff\">\r\n                        <Line data={Ldata} options={Loptions}/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"graph-div\">\r\n                    <p>\r\n                        The demand and popularity for Java has remained pretty \r\n                        steady throughout the decade. Companies demand for Java \r\n                        Developers is around the same now than how it was in 2010.\r\n                    </p>\r\n                    <div className=\"line-stuff\">\r\n                        <Bar data={Bdata} options={Boptions}/>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JavaPage\r\n","import React, { useState, useEffect, useRef } from 'react'; \r\nimport CsharpPage from './CsharpPage';\r\nimport JavaPage from './JavaPage';\r\nimport JavascriptPage from './JavascriptPage';\r\nimport MainPage from './MainPage';\r\nimport '../Language.scss'; \r\nimport { Line, Bar } from 'react-chartjs-2'\r\nimport { pythonPay, pythonPop } from \"./Data.js\"\r\nimport gsap from 'gsap'; \r\n\r\nfunction PythonPage() {\r\n\r\n    //useRef \r\n    const anim1 = useRef(null);\r\n\r\n    //useState \r\n    const [pageState, setPageState] = useState(\"python\"); \r\n\r\n    //functions \r\n    const handlePageStateCompare = () => {\r\n        setPageState(\"compare\"); \r\n    }\r\n\r\n    const handlePageStateJava = () => {\r\n        setPageState(\"java\"); \r\n    }\r\n\r\n    const handlePageStateC = () => {\r\n        setPageState(\"c#\"); \r\n    }\r\n\r\n    const handlePageStateJavascript = () => {\r\n        setPageState(\"javascript\"); \r\n    }\r\n\r\n\r\n    const Ldata = {\r\n        labels: [\"2012\", \"2014\", \"2016\", \"2018\", \"2020\"], \r\n        datasets: [\r\n            {\r\n                label: \"Python\",  \r\n                data: pythonPay, \r\n                borderColor: \"rgb(144, 19, 247)\", \r\n                backgroundColor: \"rgba(144, 19, 247, 0.4)\", \r\n                pointBackgroundColor: \"rgb(144, 19, 247)\", \r\n                pointBorderColor: \"rgb(144, 19, 247)\", \r\n            }, \r\n        ]\r\n    }\r\n    const Loptions = {\r\n        title: {\r\n            display: true, \r\n            text: 'Pay', \r\n        }, \r\n        scales: {\r\n            yAxes: [\r\n                {\r\n                    ticks: { min: 60000, max: 130000, stepSize: 30000}\r\n                }\r\n            ]\r\n        }\r\n    }\r\n\r\n\r\n    const Bdata = {\r\n        labels: [\"2012\", \"2014\", \"2016\", \"2018\", \"2020\"], \r\n        datasets: [\r\n            {\r\n                label: \"Python\", \r\n                data: pythonPop,  \r\n                borderColor: \"rgb(5, 255, 255)\", \r\n                backgroundColor: \"rgba(5, 255, 255)\", \r\n                pointBackgroundColor: \"rgb(5, 255, 255)\", \r\n                pointBorderColor: \"rgb(5, 255, 255)\", \r\n            }\r\n        ]\r\n    }\r\n    const Boptions = {\r\n        title: {\r\n            display: true, \r\n            text: 'Popularity', \r\n        }, \r\n        scales: {\r\n            yAxes: [\r\n                {\r\n                    ticks: { min: 8000, max: 35000, stepSize: 15000}\r\n                }\r\n            ]\r\n        }\r\n    }\r\n\r\n    //useEffect \r\n    useEffect(() => {\r\n        gsap.fromTo(anim1.current, { background: \"rgb(240,240,240)\" }, { background: \"linear-gradient(270deg, rgba(255,255,255,1) 0%, rgba(255,255,255,0) 100%\" })\r\n    }, [])\r\n\r\n    if (pageState === \"compare\") {\r\n        return <MainPage/>\r\n    }\r\n\r\n    else if (pageState === \"java\") {\r\n        return <JavaPage/>\r\n    }\r\n\r\n    else if (pageState === \"c#\") {\r\n        return <CsharpPage/>\r\n    }\r\n\r\n    else if (pageState === \"javascript\") {\r\n        return <JavascriptPage/>\r\n    }\r\n\r\n    return (\r\n        <div className=\"lan-page-container\">\r\n\r\n            <div className=\"left-side-container\">\r\n                <div className=\"img-container\">\r\n                    <img alt=\"\" src=\"https://dewey.tailorbrands.com/production/brand_version_mockup_image/445/4923940445_398d42e5-d903-4e8e-ba08-df943c0765d8.png?cb=1616534087\"/>\r\n                </div>\r\n                <div className=\"left-side-box\">\r\n                    <div className=\"compare-button\" onClick={handlePageStateCompare} style={{backgroundColor: \"rgb(240, 240, 240)\"}}>Compare</div>\r\n                    <div className=\"other-button\" style={{backgroundColor: \"white\"}} ref={anim1}>Python</div>\r\n                    <div className=\"other-button\" onClick={handlePageStateC} style={{backgroundColor: \"rgb(240, 240, 240)\"}}>C#</div>\r\n                    <div className=\"other-button\" onClick={handlePageStateJava} style={{backgroundColor: \"rgb(240, 240, 240)\"}}>Java</div>\r\n                    <div className=\"other-button\" onClick={handlePageStateJavascript} style={{backgroundColor: \"rgb(240, 240, 240)\"}}>Javascript</div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"right-side-container\">\r\n                \r\n                <h1>Python</h1>\r\n\r\n                <div className=\"top-p-thing\">\r\n                    Python is an interpreted, object-oriented, high-level \r\n                    programming language with dynamic semantics. Python's \r\n                    simple, easy to learn syntax emphasizes readability \r\n                    and therefore reduces the cost of program maintenance. \r\n                    Python supports modules and packages, which encourages \r\n                    program modularity and code reuse.\r\n                </div>\r\n\r\n                <div className=\"graph-div\">\r\n                    <p>\r\n                        This language mainly focuses on jobs like \r\n                        Data Science and AI. While they do make a \r\n                        lot of money, the python developers/ software \r\n                        developers don't.\r\n                    </p>\r\n                    <div className=\"line-stuff\">\r\n                        <Line data={Ldata} options={Loptions}/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"graph-div\">\r\n                    <p>\r\n                        The demand for Python jobs such as Data Science\r\n                        and Machin Learning, has rose ever since the \r\n                        beginning of the last decade.\r\n                    </p>\r\n                    <div className=\"line-stuff\">\r\n                        <Bar data={Bdata} options={Boptions}/>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PythonPage; \r\n","import React, { useState, useRef, useEffect } from 'react'; \r\nimport PythonPage from './PythonPage'; \r\nimport JavaPage from './JavaPage';\r\nimport JavascriptPage from './JavascriptPage';\r\nimport MainPage from './MainPage';\r\nimport '../Language.scss'; \r\nimport { Line, Bar } from 'react-chartjs-2'; \r\nimport { csharpPay, csharpPop } from \"./Data.js\"; \r\nimport gsap from 'gsap'; \r\n\r\nfunction CsharpPage() {\r\n\r\n    //useRef \r\n    const anim1 = useRef(null); \r\n\r\n    //useState \r\n    const [pageState, setPageState] = useState(\"c#\"); \r\n\r\n    //functions \r\n    const handlePageStateCompare = () => {\r\n        setPageState(\"compare\"); \r\n    }\r\n\r\n    const handlePageStateJava = () => {\r\n        setPageState(\"java\"); \r\n    }\r\n\r\n    const handlePageStatePython = () => {\r\n        setPageState(\"python\"); \r\n    }\r\n\r\n    const handlePageStateJavascript = () => {\r\n        setPageState(\"javascript\"); \r\n    }\r\n\r\n\r\n    const Ldata = {\r\n        labels: [\"2012\", \"2014\", \"2016\", \"2018\", \"2020\"], \r\n        datasets: [\r\n            {\r\n                label: \"C#\",  \r\n                data: csharpPay, \r\n                borderColor: \"rgb(144, 19, 247)\", \r\n                backgroundColor: \"rgba(144, 19, 247, 0.4)\", \r\n                pointBackgroundColor: \"rgb(144, 19, 247)\", \r\n                pointBorderColor: \"rgb(144, 19, 247)\", \r\n            }, \r\n        ]\r\n    }\r\n    const Loptions = {\r\n        title: {\r\n            display: true, \r\n            text: 'Pay', \r\n        }, \r\n        scales: {\r\n            yAxes: [\r\n                {\r\n                    ticks: { min: 60000, max: 130000, stepSize: 30000}\r\n                }\r\n            ]\r\n        }\r\n    }\r\n\r\n\r\n    const Bdata = {\r\n        labels: [\"2012\", \"2014\", \"2016\", \"2018\", \"2020\"], \r\n        datasets: [\r\n            {\r\n                label: \"C#\", \r\n                data: csharpPop,  \r\n                borderColor: \"rgb(5, 255, 255)\", \r\n                backgroundColor: \"rgba(5, 255, 255)\", \r\n                pointBackgroundColor: \"rgb(5, 255, 255)\", \r\n                pointBorderColor: \"rgb(5, 255, 255)\", \r\n            }\r\n        ]\r\n    }\r\n    const Boptions = {\r\n        title: {\r\n            display: true, \r\n            text: 'Popularity', \r\n        }, \r\n        scales: {\r\n            yAxes: [\r\n                {\r\n                    ticks: { min: 8000, max: 35000, stepSize: 15000}\r\n                }\r\n            ]\r\n        }\r\n    }\r\n\r\n\r\n    //useEffect \r\n    useEffect(() => {\r\n        gsap.fromTo(anim1.current, { background: \"rgb(240,240,240)\" }, { background: \"linear-gradient(270deg, rgba(255,255,255,1) 0%, rgba(255,255,255,0) 100%\" })\r\n    }, [])\r\n\r\n    if (pageState === \"compare\") {\r\n        return <MainPage/>\r\n    }\r\n\r\n    else if (pageState === \"java\") {\r\n        return <JavaPage/>\r\n    }\r\n\r\n    else if (pageState === \"python\") {\r\n        return <PythonPage/>\r\n    }\r\n\r\n    else if (pageState === \"javascript\") {\r\n        return <JavascriptPage/>\r\n    }\r\n\r\n    return (\r\n        <div className=\"lan-page-container\">\r\n\r\n            <div className=\"left-side-container\">\r\n                <div className=\"img-container\">\r\n                    <img alt=\"\" src=\"https://dewey.tailorbrands.com/production/brand_version_mockup_image/445/4923940445_398d42e5-d903-4e8e-ba08-df943c0765d8.png?cb=1616534087\"/>\r\n                </div>\r\n                <div className=\"left-side-box\">\r\n                    <div className=\"compare-button\" onClick={handlePageStateCompare} style={{backgroundColor: \"rgb(240, 240, 240)\"}}>Compare</div>\r\n                    <div className=\"other-button\" onClick={handlePageStatePython} style={{backgroundColor: \"rgb(240, 240, 240)\"}}>Python</div>\r\n                    <div className=\"other-button\" style={{backgroundColor: \"white\"}} ref={anim1}>C#</div>\r\n                    <div className=\"other-button\" onClick={handlePageStateJava} style={{backgroundColor: \"rgb(240, 240, 240)\"}}>Java</div>\r\n                    <div className=\"other-button\" onClick={handlePageStateJavascript} style={{backgroundColor: \"rgb(240, 240, 240)\"}}>Javascript</div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"right-side-container\">\r\n                \r\n                <h1>C#</h1>\r\n\r\n                <div className=\"top-p-thing\">\r\n                    C# is a modern, general-purpose, object-oriented \r\n                    programming language developed by Microsoft and \r\n                    approved by European Computer Manufacturers Association \r\n                    and International Standards Organization. C# was developed \r\n                    by Anders Hejlsberg and his team during the development \r\n                    of .Net Framework.\r\n                </div>\r\n\r\n                <div className=\"graph-div\">\r\n                    <p>\r\n                        The pay for C# developers has remained steady and \r\n                        constant over the decade.\r\n                    </p>\r\n                    <div className=\"line-stuff\">\r\n                        <Line data={Ldata} options={Loptions}/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"graph-div\">\r\n                    <p>\r\n                        Although the demand for C# developers isn't as high \r\n                        as something like a Java or Python Developer, it is \r\n                        still one of the best technologes to use in some \r\n                        parts of the US.\r\n                    </p>\r\n                    <div className=\"line-stuff\">\r\n                        <Bar data={Bdata} options={Boptions}/>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CsharpPage\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Line, Bar, Doughnut, Pie } from 'react-chartjs-2'\r\nimport CsharpPage from './CsharpPage.js';\r\nimport { pythonPay, pythonPop, pythonPayA, pythonPopA, \r\n         javaPay, javaPop, javaPayA, javaPopA, \r\n         csharpPay, csharpPop, csharpPayA, csharpPopA, \r\n         javascriptPay, javascriptPop, javascriptPayA, javascriptPopA } from \"./Data.js\"\r\nimport JavaPage from './JavaPage.js';\r\nimport JavascriptPage from './JavascriptPage.js';\r\nimport PythonPage from './PythonPage.js';\r\nimport '../Main.scss'; \r\nimport gsap from 'gsap'; \r\n\r\nfunction MainPage() {\r\n\r\n\r\n    //what i need to do is make a temporary usestate that gets the user first and second \r\n    //language on the onChange function. Then on the onSubmit function that's where you \r\n    //input all the data into the tables and graphs.\r\n    \r\n    //useRef \r\n    const anim1 = useRef(null); \r\n\r\n    //usestate \r\n    const [errorOpacity, setErrorOpacity] = useState(0); \r\n\r\n        //language state \r\n    const [tempfirstlan, setTempFirstLan] = useState(\"\");\r\n    const [tempsecondlan, setTempSecondLan] = useState(\"\"); \r\n    const [firstlanguage, setFirstlanguage] = useState(\"\"); \r\n    const [secondlanguage, setSecondlanguage] = useState(\"\"); \r\n\r\n        //python state \r\n    const [PythonPay, setPythonPay] = useState([]); \r\n    const [PythonPopularity, setPythonPopularity] = useState([]); \r\n\r\n        //java state \r\n    const [JavaPay, setJavaPay] = useState([]); \r\n    const [JavaPopularity, setJavaPopularity] = useState([]); \r\n\r\n\r\n        //c# state \r\n    const [CsharpPay, setCsharpPay] = useState([]); \r\n    const [CsharpPopularity, setCsharpPopularity] = useState([]); \r\n\r\n        //javascript state \r\n    const [JavascriptPay, setJavascriptPay] = useState([]); \r\n    const [JavascriptPopularity, setJavascriptPopularity] = useState([]); \r\n\r\n\r\n        //page state \r\n    const [pageState, setPageState] = useState(\"compare\"); \r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault(); \r\n\r\n        if (tempfirstlan === tempsecondlan || tempfirstlan === \"\" || tempsecondlan === \"\") {\r\n            setErrorOpacity(1); \r\n            return \r\n        }\r\n\r\n        //first case \r\n        if (tempfirstlan === \"Python\") {\r\n            //final language state \r\n            setFirstlanguage(tempfirstlan);\r\n            //set data \r\n            setPythonPay(pythonPay);\r\n            setPythonPopularity(pythonPop);  \r\n            setJavaPay([]); \r\n            setJavaPopularity([]); \r\n            setCsharpPay([]); \r\n            setCsharpPopularity([]); \r\n            setJavascriptPay([]); \r\n            setJavascriptPopularity([]); \r\n\r\n            setErrorOpacity(0); \r\n        }\r\n    \r\n        if (tempfirstlan === \"Java\") {\r\n            //final language state \r\n            setFirstlanguage(tempfirstlan); \r\n            //set data\r\n            setJavaPay(javaPay); \r\n            setJavaPopularity(javaPop); \r\n            setPythonPay([]);\r\n            setPythonPopularity([]);  \r\n            setCsharpPay([]); \r\n            setCsharpPopularity([]);\r\n            setJavascriptPay([]); \r\n            setJavascriptPopularity([]); \r\n\r\n            setErrorOpacity(0); \r\n        }\r\n\r\n        if (tempfirstlan === \"C#\") {\r\n            //final language state \r\n            setFirstlanguage(tempfirstlan);\r\n            //set data  \r\n            setCsharpPay(csharpPay); \r\n            setCsharpPopularity(csharpPop); \r\n            setPythonPay([]);\r\n            setPythonPopularity([]); \r\n            setJavaPay([]); \r\n            setJavaPopularity([]); \r\n            setJavascriptPay([]); \r\n            setJavascriptPopularity([]); \r\n\r\n            setErrorOpacity(0); \r\n        }\r\n\r\n        if (tempfirstlan === \"Javascript\") {\r\n            //final language state \r\n            setFirstlanguage(tempfirstlan); \r\n            //set data \r\n            setJavascriptPay(javascriptPay); \r\n            setJavascriptPopularity(javascriptPop); \r\n            setPythonPay([]);\r\n            setPythonPopularity([]); \r\n            setJavaPay([]); \r\n            setJavaPopularity([]); \r\n            setCsharpPay([]); \r\n            setCsharpPopularity([]);\r\n\r\n            setErrorOpacity(0); \r\n        }\r\n\r\n        //second case \r\n        if (tempsecondlan === \"Python\") {\r\n            //final language state \r\n            setSecondlanguage(tempsecondlan);\r\n            //set data  \r\n            setPythonPay(pythonPay);\r\n            setPythonPopularity(pythonPop);  \r\n            setJavaPay([]); \r\n            setJavaPopularity([]); \r\n            setCsharpPay([]); \r\n            setCsharpPopularity([]); \r\n            setJavascriptPay([]); \r\n            setJavascriptPopularity([]); \r\n\r\n            setErrorOpacity(0); \r\n        }\r\n    \r\n        if (tempsecondlan === \"Java\") {\r\n            //final language state \r\n            setSecondlanguage(tempsecondlan); \r\n            //set data \r\n            setJavaPay(javaPay); \r\n            setJavaPopularity(javaPop);\r\n            setPythonPay([]);\r\n            setPythonPopularity([]);  \r\n            setCsharpPay([]); \r\n            setCsharpPopularity([]);\r\n            setJavascriptPay([]); \r\n            setJavascriptPopularity([]); \r\n\r\n            setErrorOpacity(0); \r\n        }\r\n\r\n        if (tempsecondlan === \"C#\") {\r\n            //final language state \r\n            setSecondlanguage(tempsecondlan); \r\n            //set data \r\n            setJavaPay(csharpPay); \r\n            setJavaPopularity(csharpPop); \r\n            setPythonPay([]);\r\n            setPythonPopularity([]); \r\n            setJavaPay([]); \r\n            setJavaPopularity([]); \r\n            setJavascriptPay([]); \r\n            setJavascriptPopularity([]); \r\n\r\n            setErrorOpacity(0); \r\n        }\r\n\r\n        if (tempsecondlan === \"Javascript\") {\r\n            //final language state \r\n            setSecondlanguage(tempsecondlan); \r\n            //set data \r\n            setJavascriptPay(javascriptPay); \r\n            setJavascriptPopularity(javascriptPop); \r\n            setPythonPay([]);\r\n            setPythonPopularity([]); \r\n            setJavaPay([]); \r\n            setJavaPopularity([]); \r\n            setCsharpPay([]); \r\n            setCsharpPopularity([]);\r\n\r\n            setErrorOpacity(0); \r\n        }\r\n    }\r\n\r\n    //handle first language \r\n    const firstLanChange = e => {\r\n        e.preventDefault(); \r\n        console.log(e.target.value); \r\n        setTempFirstLan(e.target.value); \r\n    }\r\n\r\n    //handle second language \r\n    const secondLanChange = e => {\r\n        e.preventDefault(); \r\n        console.log(e.target.value); \r\n        setTempSecondLan(e.target.value); \r\n    }\r\n\r\n    //line graph \r\n    const Ldata = {\r\n        labels: [\"2012\", \"2014\", \"2016\", \"2018\", \"2020\"], \r\n        datasets: [\r\n            {\r\n                label: firstlanguage,  \r\n                data: firstlanguage === \"Python\" ? pythonPay : \r\n                      firstlanguage === \"Java\" ? javaPay : \r\n                      firstlanguage === \"C#\" ? csharpPay : \r\n                      firstlanguage === \"Javascript\" ? javascriptPay : [], \r\n                borderColor: \"rgb(144, 19, 247)\", \r\n                backgroundColor: \"rgba(144, 19, 247, 0.4)\", \r\n                pointBackgroundColor: \"rgb(144, 19, 247)\", \r\n                pointBorderColor: \"rgb(144, 19, 247)\", \r\n            }, \r\n            {\r\n                label: secondlanguage, \r\n                data: secondlanguage === \"Python\" ? pythonPay : \r\n                      secondlanguage === \"Java\" ? javaPay : \r\n                      secondlanguage === \"C#\" ? csharpPay : \r\n                      secondlanguage === \"Javascript\" ? javascriptPay : [], \r\n                borderColor: \"rgb(5, 255, 255)\", \r\n                backgroundColor: \"rgba(5, 255, 255, 0.4)\", \r\n                pointBackgroundColor: \"rgb(5, 255, 255)\", \r\n                pointBorderColor: \"rgb(5, 255, 255)\", \r\n            }\r\n        ]\r\n    }\r\n    const Loptions = {\r\n        title: {\r\n            display: true, \r\n            text: 'Pay', \r\n        }, \r\n        scales: {\r\n            yAxes: [\r\n                {\r\n                    //ticks: { min: 60000, max: 130000, stepSize: 17500}\r\n                    ticks: { min: 60000, max: 130000, stepSize: 40000 }\r\n                }\r\n            ]\r\n        }\r\n    }\r\n\r\n    //bar graph \r\n    const Bdata = {\r\n        labels: [\"2012\", \"2014\", \"2016\", \"2018\", \"2020\"], \r\n        datasets: [\r\n            {\r\n                label: firstlanguage, \r\n                data: firstlanguage === \"Python\" ? pythonPop : \r\n                      firstlanguage === \"Java\" ? javaPop : \r\n                      firstlanguage === \"C#\" ? csharpPop : \r\n                      firstlanguage === \"Javascript\" ? javascriptPop : [],  \r\n                borderColor: \"rgb(144, 19, 247)\", \r\n                backgroundColor: \"rgba(144, 19, 247)\", \r\n                pointBackgroundColor: \"rgb(144, 19, 247)\", \r\n                pointBorderColor: \"rgb(144, 19, 247)\", \r\n            }, \r\n            {\r\n                label: secondlanguage, \r\n                data: secondlanguage === \"Python\" ? pythonPop : \r\n                      secondlanguage === \"Java\" ? javaPop : \r\n                      secondlanguage === \"C#\" ? csharpPop : \r\n                      secondlanguage === \"Javascript\" ? javascriptPop : [],  \r\n                borderColor: \"rgb(5, 255, 255)\", \r\n                backgroundColor: \"rgba(5, 255, 255)\", \r\n                pointBackgroundColor: \"rgb(5, 255, 255)\", \r\n                pointBorderColor: \"rgb(5, 255, 255)\", \r\n            }\r\n        ]\r\n    }\r\n    const Boptions = {\r\n        title: {\r\n            display: true, \r\n            text: 'Popularity', \r\n        }, \r\n        scales: {\r\n            yAxes: [\r\n                {\r\n                    ticks: { min: 8000, max: 35000, stepSize: 12000}\r\n                }\r\n            ]\r\n        }\r\n    }\r\n\r\n    //donut graph \r\n    const Ddata = {\r\n        labels: [firstlanguage, secondlanguage],\r\n        datasets: [\r\n          {\r\n            label: 'Sales 2019 (M)',\r\n            data: [firstlanguage === \"Python\" ? Math.round(pythonPayA) : \r\n                   firstlanguage === \"Java\" ? Math.round(javaPayA) : \r\n                   firstlanguage === \"C#\" ? Math.round(csharpPayA): \r\n                   firstlanguage === \"Javascript\" ? Math.round(javascriptPayA) : [], \r\n\r\n                   secondlanguage === \"Python\" ? Math.round(pythonPayA) : \r\n                   secondlanguage === \"Java\" ? Math.round(javaPayA) : \r\n                   secondlanguage === \"C#\" ? Math.round(csharpPayA) : \r\n                   secondlanguage === \"Javascript\" ? Math.round(javascriptPayA) : []],\r\n            borderColor: [\r\n              'rgb(144, 19, 247)',\r\n              'rgb(5, 255, 255)',\r\n            ],\r\n            backgroundColor: [\r\n              'rgba(144, 19, 247, 0.4)',\r\n              'rgba(5, 255, 255, 0.4)'\r\n            ]\r\n          }\r\n        ]\r\n      }\r\n    const Doptions = {\r\n        title: {\r\n          display: true,\r\n          text: 'Bar Chart'\r\n        },\r\n      }\r\n\r\n    //circle graph \r\n    const Cdata = {\r\n        labels: [firstlanguage, secondlanguage],\r\n        datasets: [\r\n          {\r\n            label: 'Sales 2019 (M)',\r\n            data: [firstlanguage === \"Python\" ? Math.round(pythonPopA) : \r\n                   firstlanguage === \"Java\" ? Math.round(javaPopA) : \r\n                   firstlanguage === \"C#\" ? Math.round(csharpPopA): \r\n                   firstlanguage === \"Javascript\" ? Math.round(javascriptPopA) : [], \r\n\r\n                   secondlanguage === \"Python\" ? Math.round(pythonPopA) : \r\n                   secondlanguage === \"Java\" ? Math.round(javaPopA) : \r\n                   secondlanguage === \"C#\" ? Math.round(csharpPopA) : \r\n                   secondlanguage === \"Javascript\" ? Math.round(javascriptPopA) : []],\r\n            borderColor: [\r\n              'rgb(144, 19, 247)',\r\n              'rgb(5, 255, 255)',\r\n            ],\r\n            backgroundColor: [\r\n              'rgba(144, 19, 247, 0.4)',\r\n              'rgba(5, 255, 255, 0.4)'\r\n            ]\r\n          }\r\n        ]\r\n      }\r\n    const Coptions = {\r\n        title: {\r\n          display: true,\r\n          text: 'Pay'\r\n        },\r\n      }\r\n\r\n      //useEffect \r\n      useEffect(() => {\r\n          gsap.fromTo(anim1.current, { background: \"rgb(240,240,240)\" }, { background: \"linear-gradient(270deg, rgba(255,255,255,1) 0%, rgba(255,255,255,0) 100%\" })\r\n      }, [])\r\n\r\n    //functions \r\n    const handlePageStatePython = () => {\r\n        setPageState(\"python\"); \r\n    }\r\n\r\n    const handlePageStateJava = () => {\r\n        setPageState(\"java\"); \r\n    }\r\n\r\n    const handlePageStateC = () => {\r\n        setPageState(\"c#\"); \r\n    }\r\n\r\n    const handlePageStateJavascript = () => {\r\n        setPageState(\"javascript\"); \r\n    }\r\n\r\n    if (pageState === \"python\") {\r\n        return <PythonPage/>\r\n    }\r\n\r\n    else if (pageState === \"java\") {\r\n        return <JavaPage/>\r\n    }\r\n\r\n    else if (pageState === \"c#\") {\r\n        return <CsharpPage/>\r\n    }\r\n\r\n    else if (pageState === \"javascript\") {\r\n        return <JavascriptPage/>\r\n    }\r\n\r\n    return (\r\n        <div className=\"page-container\">\r\n\r\n            <div className=\"left-side-container\">\r\n                <div className=\"img-container\">\r\n                    <img alt=\"\" src=\"https://dewey.tailorbrands.com/production/brand_version_mockup_image/445/4923940445_398d42e5-d903-4e8e-ba08-df943c0765d8.png?cb=1616534087\"/>\r\n                </div>\r\n                <div className=\"left-side-box\">\r\n                    <div className=\"compare-button\" style={{backgroundColor: \"white\"}} ref={anim1}>Compare</div>\r\n                    <div className=\"other-button\" style={{backgroundColor: \"rgb(240, 240, 240)\"}} onClick={handlePageStatePython}>Python</div>\r\n                    <div className=\"other-button\" style={{backgroundColor: \"rgb(240, 240, 240)\"}} onClick={handlePageStateC}>C#</div>\r\n                    <div className=\"other-button\" style={{backgroundColor: \"rgb(240, 240, 240)\"}} onClick={handlePageStateJava}>Java</div>\r\n                    <div className=\"other-button\" style={{backgroundColor: \"rgb(240, 240, 240)\"}} onClick={handlePageStateJavascript}>Javascript</div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"right-side-container\">\r\n\r\n                <form className=\"input-container\" onSubmit={handleSubmit}>\r\n\r\n                    <div className=\"input-stuff-container\">\r\n                        <div className=\"left-select\"></div>\r\n                        <select onChange={firstLanChange} >\r\n                            <optgroup>\r\n                                <option defaultValue>Choose</option>\r\n                                <option value=\"Java\">Java</option>\r\n                                <option value=\"Python\">Python</option>\r\n                                <option value=\"C#\">C#</option>\r\n                                <option value=\"Javascript\">Javascript</option>\r\n                            </optgroup>\r\n                        </select>\r\n\r\n                        <select onChange={secondLanChange}>\r\n                            <optgroup>\r\n                                <option defaultValue>Choose</option>\r\n                                <option value=\"Java\">Java</option>\r\n                                <option value=\"Python\">Python</option>\r\n                                <option value=\"C#\">C#</option>\r\n                                <option value=\"Javascript\">Javascript</option>\r\n                            </optgroup>\r\n                        </select>\r\n                        <div className=\"right-select\"></div>\r\n                    </div>\r\n\r\n                    <button className=\"main-button\">Go</button>\r\n\r\n                </form>\r\n\r\n                <div id=\"red-error\" style={{opacity: errorOpacity, color: \"red\"}}>You cannot input the same language</div>\r\n                \r\n                <div className=\"graph-container\">\r\n                    <div className=\"line-graph-donut-container\">\r\n                        <div className=\"line-div\">\r\n                            <Line data={Ldata} options={Loptions}/>\r\n                        </div>\r\n                        <div className=\"donut-div\">\r\n                            <Doughnut data={Ddata} options={Doptions} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"bar-graph-pie-container\">\r\n                        <div className=\"pie-div\">\r\n                            <Pie data={Cdata} options={Coptions} />\r\n                        </div>\r\n                        <div className=\"bar-div\">\r\n                            <Bar data={Bdata} options={Boptions}/> \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainPage\r\n","import MainPage from './Work/MainPage';\n\nfunction App() {\n  return (\n    <div className=\"back\">\n      <MainPage/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}